"use client";

import { useState, useEffect } from "react";
import { TrendCard, ExportButton } from "@/components/ui";
import styles from "./page.module.css";

interface AnalyticsData {
  totalProducts: number;
  totalViews: number;
  totalSales: number;
  totalRevenue: number;
  categories: Array<{
    name: string;
    count: number;
    percentage: number;
  }>;
  salesTrend: Array<{
    date: string;
    sales: number;
    revenue: number;
  }>;
  topProducts: Array<{
    id: number;
    name: string;
    views: number;
    sales: number;
    revenue: number;
  }>;
}

const Analytics = () => {
  const [analyticsData, setAnalyticsData] = useState<AnalyticsData | null>(
    null
  );
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [selectedPeriod, setSelectedPeriod] = useState("7d");

  useEffect(() => {
    fetchAnalyticsData();
  }, [selectedPeriod]);

  const fetchAnalyticsData = async () => {
    setIsLoading(true);
    try {
      // –°–∏–º—É–ª—è—Ü–∏—è API –∑–∞–ø—Ä–æ—Å–∞ - –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π endpoint
      await new Promise((resolve) => setTimeout(resolve, 1000));

      const mockData: AnalyticsData = {
        totalProducts: 342,
        totalViews: 15420,
        totalSales: 89,
        totalRevenue: 234500,
        categories: [
          { name: "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞", count: 125, percentage: 36.5 },
          { name: "–û–¥–µ–∂–¥–∞", count: 98, percentage: 28.7 },
          { name: "–ú–µ–±–µ–ª—å", count: 67, percentage: 19.6 },
          { name: "–°–ø–æ—Ä—Ç", count: 52, percentage: 15.2 },
        ],
        salesTrend: [
          { date: "2025-10-17", sales: 12, revenue: 32000 },
          { date: "2025-10-18", sales: 18, revenue: 48000 },
          { date: "2025-10-19", sales: 15, revenue: 38000 },
          { date: "2025-10-20", sales: 22, revenue: 56000 },
          { date: "2025-10-21", sales: 19, revenue: 45000 },
          { date: "2025-10-22", sales: 25, revenue: 62000 },
          { date: "2025-10-23", sales: 28, revenue: 71000 },
        ],
        topProducts: [
          {
            id: 1,
            name: "iPhone 15 Pro",
            views: 245,
            sales: 8,
            revenue: 95000,
          },
          {
            id: 2,
            name: "MacBook Air M2",
            views: 189,
            sales: 5,
            revenue: 65000,
          },
          { id: 3, name: "AirPods Pro", views: 156, sales: 12, revenue: 48000 },
          {
            id: 4,
            name: 'Samsung TV 55"',
            views: 134,
            sales: 6,
            revenue: 42000,
          },
          { id: 5, name: "Nike Air Max", views: 98, sales: 15, revenue: 22500 },
        ],
      };

      setAnalyticsData(mockData);
    } catch (error) {
      console.error("Error fetching analytics:", error);
      setError("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∞–Ω–∞–ª–∏—Ç–∏–∫–∏");
    } finally {
      setIsLoading(false);
    }
  };

  const formatCurrency = (amount: number) => {
    return new Intl.NumberFormat("ru-RU", {
      style: "currency",
      currency: "RUB",
      minimumFractionDigits: 0,
    }).format(amount);
  };

  const formatNumber = (num: number) => {
    return new Intl.NumberFormat("ru-RU").format(num);
  };

  if (isLoading) {
    return (
      <div className={styles.container}>
        <div className={styles.loading}>
          <div className={styles.spinner}></div>
          <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className={styles.container}>
        <div className={styles.error}>
          <h2>–û—à–∏–±–∫–∞</h2>
          <p>{error}</p>
          <button onClick={fetchAnalyticsData} className={styles.retryButton}>
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </button>
        </div>
      </div>
    );
  }

  if (!analyticsData) return null;

  return (
    <div className={styles.container}>
      <div className={styles.header}>
        <h1 className={styles.title}>–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</h1>
        <div className={styles.periodSelector}>
          <select
            value={selectedPeriod}
            onChange={(e) => setSelectedPeriod(e.target.value)}
            className={styles.select}
          >
            <option value="7d">–ó–∞ 7 –¥–Ω–µ–π</option>
            <option value="30d">–ó–∞ 30 –¥–Ω–µ–π</option>
            <option value="90d">–ó–∞ 3 –º–µ—Å—è—Ü–∞</option>
            <option value="1y">–ó–∞ –≥–æ–¥</option>
          </select>
          <ExportButton period={selectedPeriod} />
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ */}
      <div className={styles.metricsGrid}>
        <TrendCard
          title="–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤"
          value={formatNumber(analyticsData.totalProducts)}
          trend={12.5}
          trendPeriod="–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π"
          icon="üì¶"
          color="blue"
        />

        <TrendCard
          title="–ü—Ä–æ—Å–º–æ—Ç—Ä—ã"
          value={formatNumber(analyticsData.totalViews)}
          trend={8.3}
          trendPeriod="–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π"
          icon="üëÅÔ∏è"
          color="green"
        />

        <TrendCard
          title="–ü—Ä–æ–¥–∞–∂–∏"
          value={formatNumber(analyticsData.totalSales)}
          trend={-2.1}
          trendPeriod="–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π"
          icon="üõí"
          color="purple"
        />

        <TrendCard
          title="–í—ã—Ä—É—á–∫–∞"
          value={formatCurrency(analyticsData.totalRevenue)}
          trend={15.7}
          trendPeriod="–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π"
          icon="üí∞"
          color="orange"
        />
      </div>

      <div className={styles.chartsGrid}>
        {/* –ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–¥–∞–∂ */}
        <div className={styles.chartCard}>
          <h3 className={styles.chartTitle}>–î–∏–Ω–∞–º–∏–∫–∞ –ø—Ä–æ–¥–∞–∂</h3>
          <div className={styles.salesChart}>
            {analyticsData.salesTrend.map((item, index) => (
              <div key={index} className={styles.chartBar}>
                <div
                  className={styles.bar}
                  style={{
                    height: `${
                      (item.sales /
                        Math.max(
                          ...analyticsData.salesTrend.map((i) => i.sales)
                        )) *
                      100
                    }%`,
                  }}
                ></div>
                <span className={styles.barLabel}>
                  {new Date(item.date).toLocaleDateString("ru-RU", {
                    day: "2-digit",
                    month: "2-digit",
                  })}
                </span>
              </div>
            ))}
          </div>
        </div>

        {/* –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
        <div className={styles.chartCard}>
          <h3 className={styles.chartTitle}>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤</h3>
          <div className={styles.categoriesChart}>
            {analyticsData.categories.map((category, index) => (
              <div key={index} className={styles.categoryItem}>
                <div className={styles.categoryInfo}>
                  <span className={styles.categoryName}>{category.name}</span>
                  <span className={styles.categoryCount}>{category.count}</span>
                </div>
                <div className={styles.categoryBar}>
                  <div
                    className={styles.categoryProgress}
                    style={{ width: `${category.percentage}%` }}
                  ></div>
                </div>
                <span className={styles.categoryPercentage}>
                  {category.percentage}%
                </span>
              </div>
            ))}
          </div>
        </div>
      </div>

      {/* –¢–æ–ø —Ç–æ–≤–∞—Ä—ã */}
      <div className={styles.topProducts}>
        <h3 className={styles.sectionTitle}>–¢–æ–ø —Ç–æ–≤–∞—Ä—ã</h3>
        <div className={styles.productsTable}>
          <div className={styles.tableHeader}>
            <span>–¢–æ–≤–∞—Ä</span>
            <span>–ü—Ä–æ—Å–º–æ—Ç—Ä—ã</span>
            <span>–ü—Ä–æ–¥–∞–∂–∏</span>
            <span>–í—ã—Ä—É—á–∫–∞</span>
          </div>
          {analyticsData.topProducts.map((product, index) => (
            <div key={product.id} className={styles.tableRow}>
              <div className={styles.productInfo}>
                <span className={styles.productRank}>#{index + 1}</span>
                <span className={styles.productName}>{product.name}</span>
              </div>
              <span className={styles.productViews}>
                {formatNumber(product.views)}
              </span>
              <span className={styles.productSales}>
                {formatNumber(product.sales)}
              </span>
              <span className={styles.productRevenue}>
                {formatCurrency(product.revenue)}
              </span>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

export default Analytics;
